var _user$project$SweetAlert_ops = _user$project$SweetAlert_ops || {};
_user$project$SweetAlert_ops['=>'] = F2(
	function (v0, v1) {
		return {ctor: '_Tuple2', _0: v0, _1: v1};
	});
var _user$project$SweetAlert$sweetOverlayStyle = {
	ctor: '::',
	_0: A2(_user$project$SweetAlert_ops['=>'], 'background-color', 'rgba(0,0,0,0.4)'),
	_1: {
		ctor: '::',
		_0: A2(_user$project$SweetAlert_ops['=>'], 'position', 'fixed'),
		_1: {
			ctor: '::',
			_0: A2(_user$project$SweetAlert_ops['=>'], 'left', '0'),
			_1: {
				ctor: '::',
				_0: A2(_user$project$SweetAlert_ops['=>'], 'right', '0'),
				_1: {
					ctor: '::',
					_0: A2(_user$project$SweetAlert_ops['=>'], 'top', '0'),
					_1: {
						ctor: '::',
						_0: A2(_user$project$SweetAlert_ops['=>'], 'bottom', '0'),
						_1: {
							ctor: '::',
							_0: A2(_user$project$SweetAlert_ops['=>'], 'display', 'none'),
							_1: {
								ctor: '::',
								_0: A2(_user$project$SweetAlert_ops['=>'], 'z-index', '1010'),
								_1: {
									ctor: '::',
									_0: A2(_user$project$SweetAlert_ops['=>'], 'opacity', '1.01'),
									_1: {
										ctor: '::',
										_0: A2(_user$project$SweetAlert_ops['=>'], 'display', 'block'),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$SweetAlert$overlay = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('sweet-overlay'),
		_1: {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(_user$project$SweetAlert$sweetOverlayStyle),
			_1: {ctor: '[]'}
		}
	},
	{ctor: '[]'});
var _user$project$SweetAlert$sweetPStyle = {
	ctor: '::',
	_0: A2(_user$project$SweetAlert_ops['=>'], 'color', '#797979'),
	_1: {
		ctor: '::',
		_0: A2(_user$project$SweetAlert_ops['=>'], 'font-size', '16px'),
		_1: {
			ctor: '::',
			_0: A2(_user$project$SweetAlert_ops['=>'], 'text-align', 'center'),
			_1: {
				ctor: '::',
				_0: A2(_user$project$SweetAlert_ops['=>'], 'font-weight', '300'),
				_1: {
					ctor: '::',
					_0: A2(_user$project$SweetAlert_ops['=>'], 'position', 'relative'),
					_1: {
						ctor: '::',
						_0: A2(_user$project$SweetAlert_ops['=>'], 'text-align', 'inherit'),
						_1: {
							ctor: '::',
							_0: A2(_user$project$SweetAlert_ops['=>'], 'float', 'none'),
							_1: {
								ctor: '::',
								_0: A2(_user$project$SweetAlert_ops['=>'], 'margin', '0'),
								_1: {
									ctor: '::',
									_0: A2(_user$project$SweetAlert_ops['=>'], 'padding', '0'),
									_1: {
										ctor: '::',
										_0: A2(_user$project$SweetAlert_ops['=>'], 'line-height', 'normal'),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$SweetAlert$sweetStyle = {
	ctor: '::',
	_0: A2(_user$project$SweetAlert_ops['=>'], 'background-color', 'white'),
	_1: {
		ctor: '::',
		_0: A2(_user$project$SweetAlert_ops['=>'], 'width', '478px'),
		_1: {
			ctor: '::',
			_0: A2(_user$project$SweetAlert_ops['=>'], 'padding', '17px'),
			_1: {
				ctor: '::',
				_0: A2(_user$project$SweetAlert_ops['=>'], 'border-radius', '5px'),
				_1: {
					ctor: '::',
					_0: A2(_user$project$SweetAlert_ops['=>'], 'text-align', 'center'),
					_1: {
						ctor: '::',
						_0: A2(_user$project$SweetAlert_ops['=>'], 'position', 'fixed'),
						_1: {
							ctor: '::',
							_0: A2(_user$project$SweetAlert_ops['=>'], 'left', '50%'),
							_1: {
								ctor: '::',
								_0: A2(_user$project$SweetAlert_ops['=>'], 'top', '50%'),
								_1: {
									ctor: '::',
									_0: A2(_user$project$SweetAlert_ops['=>'], 'margin-left', '-256px'),
									_1: {
										ctor: '::',
										_0: A2(_user$project$SweetAlert_ops['=>'], 'margin-top', '-200px'),
										_1: {
											ctor: '::',
											_0: A2(_user$project$SweetAlert_ops['=>'], 'overflow', 'hidden'),
											_1: {
												ctor: '::',
												_0: A2(_user$project$SweetAlert_ops['=>'], 'display', 'block'),
												_1: {
													ctor: '::',
													_0: A2(_user$project$SweetAlert_ops['=>'], 'z-index', '2000'),
													_1: {
														ctor: '::',
														_0: A2(_user$project$SweetAlert_ops['=>'], 'opacity', '1'),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$SweetAlert$sweetButtonStyle = {
	ctor: '::',
	_0: A2(_user$project$SweetAlert_ops['=>'], 'background-color', '#AEDEF4'),
	_1: {
		ctor: '::',
		_0: A2(_user$project$SweetAlert_ops['=>'], 'color', 'white'),
		_1: {
			ctor: '::',
			_0: A2(_user$project$SweetAlert_ops['=>'], 'border', 'none'),
			_1: {
				ctor: '::',
				_0: A2(_user$project$SweetAlert_ops['=>'], 'box-shadow', 'none'),
				_1: {
					ctor: '::',
					_0: A2(_user$project$SweetAlert_ops['=>'], 'font-size', '17px'),
					_1: {
						ctor: '::',
						_0: A2(_user$project$SweetAlert_ops['=>'], 'font-weight', '500'),
						_1: {
							ctor: '::',
							_0: A2(_user$project$SweetAlert_ops['=>'], 'border-radius', '5px'),
							_1: {
								ctor: '::',
								_0: A2(_user$project$SweetAlert_ops['=>'], 'padding', '10px 32px'),
								_1: {
									ctor: '::',
									_0: A2(_user$project$SweetAlert_ops['=>'], 'margin', '26px 5px 0 5px'),
									_1: {
										ctor: '::',
										_0: A2(_user$project$SweetAlert_ops['=>'], 'cursor', 'pointer'),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _user$project$SweetAlert$sweetH2Style = {
	ctor: '::',
	_0: A2(_user$project$SweetAlert_ops['=>'], 'color', '#575757'),
	_1: {
		ctor: '::',
		_0: A2(_user$project$SweetAlert_ops['=>'], 'font-size', '30px'),
		_1: {
			ctor: '::',
			_0: A2(_user$project$SweetAlert_ops['=>'], 'text-align', 'center'),
			_1: {
				ctor: '::',
				_0: A2(_user$project$SweetAlert_ops['=>'], 'font-weight', '600'),
				_1: {
					ctor: '::',
					_0: A2(_user$project$SweetAlert_ops['=>'], 'text-transform', 'none'),
					_1: {
						ctor: '::',
						_0: A2(_user$project$SweetAlert_ops['=>'], 'position', 'relative'),
						_1: {ctor: '[]'}
					}
				}
			}
		}
	}
};
var _user$project$SweetAlert$sweetAlertStyle = {
	ctor: '::',
	_0: A2(_user$project$SweetAlert_ops['=>'], 'display', 'block'),
	_1: {
		ctor: '::',
		_0: A2(_user$project$SweetAlert_ops['=>'], 'margin-top', '-104px'),
		_1: {ctor: '[]'}
	}
};
var _user$project$SweetAlert$displayStyle = {
	ctor: '::',
	_0: A2(_user$project$SweetAlert_ops['=>'], 'display', 'none'),
	_1: {ctor: '[]'}
};
var _user$project$SweetAlert$basicAlert = function (onOkClick) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('sweet-alert showSweetAlert visible'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					A2(_elm_lang$core$Basics_ops['++'], _user$project$SweetAlert$sweetAlertStyle, _user$project$SweetAlert$sweetStyle)),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('icon error'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(_user$project$SweetAlert$displayStyle),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('x-mark'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('line left'),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$span,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('line right'),
										_1: {ctor: '[]'}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('icon warning'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(_user$project$SweetAlert$displayStyle),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$span,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('body'),
								_1: {ctor: '[]'}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('dot'),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('icon info'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$style(_user$project$SweetAlert$displayStyle),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('icon success'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$style(_user$project$SweetAlert$displayStyle),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$span,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('line tip'),
										_1: {ctor: '[]'}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$span,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('line long'),
											_1: {ctor: '[]'}
										},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('placeholder'),
												_1: {ctor: '[]'}
											},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$div,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('fix'),
													_1: {ctor: '[]'}
												},
												{ctor: '[]'}),
											_1: {ctor: '[]'}
										}
									}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('icon custom'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$style(_user$project$SweetAlert$displayStyle),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$h2,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$style(_user$project$SweetAlert$sweetH2Style),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('test one two'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$p,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$style(
												A2(
													_elm_lang$core$Basics_ops['++'],
													{
														ctor: '::',
														_0: A2(_user$project$SweetAlert_ops['=>'], 'display', 'block'),
														_1: {ctor: '[]'}
													},
													_user$project$SweetAlert$sweetPStyle)),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('yeee what he said'),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$button,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('cancel'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$style(_user$project$SweetAlert$displayStyle),
													_1: {ctor: '[]'}
												}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Cancel'),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$button,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('confirm'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$style(_user$project$SweetAlert$sweetButtonStyle),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Events$onClick(onOkClick),
															_1: {ctor: '[]'}
														}
													}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('OK'),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$SweetAlert$alert = function (_p0) {
	var _p1 = _p0;
	return _p1.visible ? A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$SweetAlert$overlay,
			_1: {
				ctor: '::',
				_0: _user$project$SweetAlert$basicAlert(_p1.onOkClick),
				_1: {ctor: '[]'}
			}
		}) : A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{ctor: '[]'});
};
var _user$project$SweetAlert$Model = function (a) {
	return {visible: a};
};
var _user$project$SweetAlert$SweetAlertConfig = F2(
	function (a, b) {
		return {onOkClick: a, visible: b};
	});
